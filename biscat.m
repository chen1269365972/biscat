function varargout = biscat(varargin)
%%  BISCAT GUI initialization function and callback subfunctions

% Author:   Jason Gaudette
% Email:    jason.e.gaudette@navy.mil

% load handles to generator functions and callbacks
addpath('gui_callbacks');
GUI.autogen = gui_generator;
GUI.callbacks.panel = gui_panel_callback;  
GUI.callbacks.menu = gui_menu_callback; 
GUI.callbacks.ctrl = gui_control_callback;
GUI.callbacks.help = gui_helper_callback;


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% User parameters & settings
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

winSize = [0 0 650 800];
statBarSize = [0 0 winSize(3) 20];
panelSize = [5 55 winSize(3)-10 winSize(4)-80];
neurPanelSize = [180 40 420 290];           % neural transduction subpanels
checkboxSize = [5 5 175 20];

GUI.constants.charWidth = 7;      % conversion factor for characters to pixels
GUI.constants.charHeight = 14;    % conversion factor for characters to pixels



%% Launch main window
GUI.handles.main.figure = figure(...
    'name', 'Brown University  -  BiSCAT Sonar Simulator',...
    'units', 'pixels',...
    'position', winSize,...
    'menubar','none',...
    'numbertitle','off',...
    'resize','off',...
    'handlevisibility','off');          % prevents overplotting

fprintf('Initializing BiSCAT figure window...\n')
%guidata(GUI.handles.main.figure, GUI)   % save figure handle in case of failure


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% MAIN GUI - menu bar
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% FILE MENU
GUI.handles.menu.file = uimenu(...
    GUI.handles.main.figure,...
    'Label','File');
GUI.handles.menu.file_open = uimenu(...
    GUI.handles.menu.file,...
    'Label','Open Settings...',...
    'Callback',GUI.callbacks.menu.open,...
    'Accelerator','o');
GUI.handles.menu.file_save = uimenu(...
    GUI.handles.menu.file,...
    'Label','Save Settings...',...
    'Callback',GUI.callbacks.menu.save,...
    'Accelerator','s');
GUI.handles.menu.file_load = uimenu(...
    GUI.handles.menu.file,...
    'Label','Load Time Series Data',...
    'Callback',GUI.callbacks.ctrl.load_data,...
    'Separator','on',...
    'Accelerator','l');
GUI.handles.menu.file_exit = uimenu(...
    GUI.handles.menu.file,...
    'Label','Exit',...
    'Callback','closereq',...
    'Separator','on',...
    'Accelerator','w');


% EDIT MENU
%GUI.handles.menu.edit = uimenu(...
%    GUI.handles.main.figure,...
%    'Label','Edit');
%GUI.handles.menu.edit_ = uimenu(...
%    GUI.handles.menu.edit,...
%    'Label','',...
%    'Callback','',...
%    'Accelerator','');


% TOOLS MENU
GUI.handles.menu.tools = uimenu(...
    GUI.handles.main.figure,...
    'Label','Tools');
GUI.handles.menu.tools_runsim = uimenu(...
    GUI.handles.menu.tools,...
    'Label','Run Simulation',...
    'Callback',{GUI.callbacks.ctrl.run_sim,0},...
    'Accelerator','r');
% GUI.handles.menu.tools_runpanel = uimenu(...
%     GUI.handles.menu.tools,...
%     'Label','Run Current Panel',...
%     'Callback',{GUI.callbacks.ctrl.run_sim,0},...
%     'Accelerator','p');


% HELP MENU
GUI.handles.menu.help = uimenu(...
    GUI.handles.main.figure,...
    'Label','Help');
GUI.handles.menu.help_about = uimenu(...
    GUI.handles.menu.help,...
    'Label','About BiSCAT',...
    'Callback',GUI.callbacks.menu.about);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% MAIN GUI - tabs, panels, and buttons
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Main window buttons
GUI.handles.main.butt_close = uicontrol(...
    'Parent',GUI.handles.main.figure,...
    'Style','pushbutton',...
    'Position',[winSize(3)-400 30 80 20],...
    'String','Finish Up',...
    'Callback','msgbox(sprintf(''Confuscius says:\n"Desire to have things done quickly prevents their being done thoroughly."''),''Finish Up!'')');
GUI.handles.main.butt_finish = uicontrol(...
    'Parent',GUI.handles.main.figure,...
    'Style','pushbutton',...
    'Position',[winSize(3)-300 30 80 20],...
    'String','Close Figs',...
    'Callback','close all');
GUI.handles.main.butt_run = uicontrol(...
    'Parent',GUI.handles.main.figure,...
    'Style','pushbutton',...
    'Position',[winSize(3)-200 30 80 20],...
    'String','Run All',...
    'Callback',{GUI.callbacks.ctrl.run_sim,0});
GUI.handles.main.butt_quit = uicontrol(...
    'Parent',GUI.handles.main.figure,...
    'Style','pushbutton',...
    'Position',[winSize(3)-100 30 80 20],...
    'String','Quit',...
    'Callback','closereq');


% Status Bar
GUI.handles.main.status_bar = uicontrol(...
    'Parent',GUI.handles.main.figure,...
    'Style','text',...
    'Position',statBarSize,...
    'String','Biscat, version 0.5, Jason Gaudette',...
    'HorizontalAlignment','left');


% Swapable Panels
GUI.handles.tab1.panel = uipanel(...
    'Parent',GUI.handles.main.figure,...
    'Units','pixels','Position',panelSize,...
    'BorderType','beveledin',...
    'Visible','on');
GUI.handles.tab2.panel = uipanel(...
    'Parent',GUI.handles.main.figure,...
    'Units','pixels','Position',panelSize,...
    'BorderType','beveledin',...
    'Visible','off');
GUI.handles.tab3.panel = uipanel(...
    'Parent',GUI.handles.main.figure,...
    'Units','pixels','Position',panelSize,...
    'BorderType','beveledin',...
    'Visible','off');
GUI.handles.tab4.panel = uipanel(...
    'Parent',GUI.handles.main.figure,...
    'Units','pixels','Position',panelSize,...
    'BorderType','beveledin',...
    'Visible','off');


% Tab buttons
GUI.handles.tab1.butt_tab = uicontrol(...
    'Parent',GUI.handles.main.figure,...
    'Style','pushbutton',...
    'Position',[10 winSize(4)-25 140 20],...
    'Callback',GUI.callbacks.panel.main,...
    'String','Simulation Settings');
GUI.handles.tab2.butt_tab = uicontrol(...
    'Parent',GUI.handles.main.figure,...
    'Style','pushbutton',...
    'Position',[160 winSize(4)-25 140 20],...
    'Callback',GUI.callbacks.panel.main,...
    'String','Peripheral Model');
GUI.handles.tab3.butt_tab = uicontrol(...
    'Parent',GUI.handles.main.figure,...
    'Style','pushbutton',...
    'Position',[310 winSize(4)-25 140 20],...
    'Callback',GUI.callbacks.panel.main,...
    'String','Neural Model');
GUI.handles.tab4.butt_tab = uicontrol(...
    'Parent',GUI.handles.main.figure,...
    'Style','pushbutton',...
    'Position',[460 winSize(4)-25 140 20],...
    'Callback',GUI.callbacks.panel.main,...
    'Visible','off',...             %% panel unused - temporarily disabled
    'String','Cortex Model');


% Subpanel buttons
GUI.handles.tab1.butt_run = uicontrol(...
    'Parent',GUI.handles.tab1.panel,...
    'Style','pushbutton',...
    'Units','pixels',...
    'Position',[panelSize(3)-120 10 100 20],...
    'String','Run Panel',...
    'Callback',{GUI.callbacks.ctrl.run_sim,1});
GUI.handles.tab2.butt_run = uicontrol(...
    'Parent',GUI.handles.tab2.panel,...
    'Style','pushbutton',...
    'Units','pixels',...
    'Position',[panelSize(3)-120 10 100 20],...
    'String','Run Panel',...
    'Callback',{GUI.callbacks.ctrl.run_sim,2});
GUI.handles.tab3.butt_run = uicontrol(...
    'Parent',GUI.handles.tab3.panel,...
    'Style','pushbutton',...
    'Units','pixels',...
    'Position',[panelSize(3)-120 10 100 20],...
    'String','Run Panel',...
    'Callback',{GUI.callbacks.ctrl.run_sim,3});


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% TAB1 - INPUT SIGNAL PANEL
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

GUI.handles.tab1.input.panel = uibuttongroup(...
    'Parent',GUI.handles.tab1.panel,...
    'Title','Input Signal',...
    'Units','pixels',...
    'Position',[10 400 panelSize(3)-20 300],...
    'BorderType','beveledout');

% text & input block
GUI.options.tab1.input.text_fname = {...
    {'','file_name',''}};
GUI.handles.tab1.input = ...
    GUI.autogen.Textedit(...
        GUI.options.tab1.input.text_fname, ...
        GUI.handles.tab1.input.panel, ...
        [10 260 510 20], ...
        GUI.handles.tab1.input);
GUI.handles.tab1.input.butt_fname = uicontrol(...
    'Parent',GUI.handles.tab1.input.panel,...
    'Style','pushbutton',...
    'Position',[530 260 80 20],...
    'String','Load File',...
    'Callback',GUI.callbacks.ctrl.load_data);

% signal normalization options
GUI.options.tab1.input.check_norm = {...
    {'Normalize Energy','file_normalize'}};
GUI.handles.tab1.input = ...
    GUI.autogen.Checkbox(...
        GUI.options.tab1.input.check_norm, ...
        GUI.handles.tab1.input.panel, ...
        [10 220 100 20], ...
        GUI.handles.tab1.input);
GUI.options.tab1.input.text_norm = {...
    {'dB SPL re 20uPa @ 1m','file_normlevel',80}};
GUI.handles.tab1.input = ...
    GUI.autogen.Textedit(...
        GUI.options.tab1.input.text_norm, ...
        GUI.handles.tab1.input.panel, ...
        [panelSize(3)-100 220 60 20], ...
        GUI.handles.tab1.input);


% check box
GUI.options.tab1.input.plots = {...
    {'Time Series','file_timeseries'}, ...
    {'Spectrogram','file_specgram'}, ...
    {'Wigner-Ville','file_wignerville'}};
GUI.handles.tab1.input = ...
    GUI.autogen.Checkbox(...
        GUI.options.tab1.input.plots, ...
        GUI.handles.tab1.input.panel, ...
        checkboxSize, ...
        GUI.handles.tab1.input);


%% need to create popup window to present analysis options (MC vs. single /
%% mono-binaural)

% tags = 'panel_anal', ...
%            'anal_ntrials' ...


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% TAB2 - COCHLEAR BLOCK PANEL
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

GUI.handles.tab2.coch.panel = uibuttongroup(...
    'Parent',GUI.handles.tab2.panel,...
    'Title','Inner Ear - Cochlear Filterbank',...
    'Units','pixels',...
    'Position',[10 400 panelSize(3)-20 300],...
    'Tag','coch_panel',...
    'BorderType','beveledout');

% bullet options
GUI.options.tab2.coch.opts = {...
    {'Butterworth','coch_butter'},...
    {'Chebychev I','coch_cheby1'},...
    {'FIR LS','coch_firls'},...
    {'FIR Window','coch_firwin'},...
    {'Gammatone','coch_gammatone'},...
    {'Gammachirp','coch_gammachirp'},...
    {'DRNL','coch_drnl'}};
GUI.handles.tab2.coch = ...
    GUI.autogen.Bullets(...
        GUI.options.tab2.coch.opts, ...
        GUI.handles.tab2.coch.panel, ...
        [5 260 170 20], ...
        GUI.handles.tab2.coch);

% text & input block
GUI.options.tab2.coch.parm = {'Filterbank Parameters',...
    {'Order','coch_ord',4},...
    {'Ripple (dB)','coch_ripple',6},...
    {'Q/BW (Hz)','coch_bw',4000},...
    {'Fmin (Hz)','coch_fmin',15000},...
    {'Fmax (Hz)','coch_fmax',100000},...
    {'Channels','coch_steps',41}};
GUI.handles.tab2.coch = ...
    GUI.autogen.Textedit(...
        GUI.options.tab2.coch.parm, ...
        GUI.handles.tab2.coch.panel, ...
        [220 260 100 20], ...
        GUI.handles.tab2.coch);

% text & dropdown
GUI.options.tab2.coch.cent = {...
    {'Center Freq. Spacing','coch_fcenter',{'Constant BW','Constant Q'}}};
GUI.handles.tab2.coch = ...
    GUI.autogen.Dropdown(...
        GUI.options.tab2.coch.cent, ...
        GUI.handles.tab2.coch.panel, ...
        [215 100 130 20], ...
        GUI.handles.tab2.coch);

% check box
GUI.options.tab2.coch.gdelay = {...
    {'Adaptive filter delay (ALT)','coch_mode'}};
GUI.handles.tab2.coch = ...
    GUI.autogen.Checkbox(...
        GUI.options.tab2.coch.gdelay, ...
        GUI.handles.tab2.coch.panel, ...
        [400 260 175 20], ...
        GUI.handles.tab2.coch);


% check box
GUI.options.tab2.coch.plots = {...
    {'Frequency Response','coch_tfplot'},...
    {'Group Delay','coch_grpdelay'},...
    {'Basilar Membrane Motion','coch_bmmplot'}};
GUI.handles.tab2.coch = ...
    GUI.autogen.Checkbox(...
        GUI.options.tab2.coch.plots, ...
        GUI.handles.tab2.coch.panel, ...
        checkboxSize, ...
        GUI.handles.tab2.coch);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% TAB2 - NEURAL TRANSDUCTION PANEL
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

GUI.handles.tab2.neur.panel = uibuttongroup(...
    'Parent',GUI.handles.tab2.panel,...
    'Title','Inner Hair Cell - Neural Transduction',...
    'SelectionChangeFcn',GUI.callbacks.panel.neur,...
    'Units','pixels',...
    'Position',[10 40 panelSize(3)-20 350],...
    'Tag','neur_panel',...
    'BorderType','beveledout');

% bullet list
GUI.options.tab2.neur.opts = {...
    {'Rectify Compress Filter','neur_rcf'},...
    {'Biophysical Model','neur_bio'},...
    {'Random Process','neur_rnd'}};
GUI.handles.tab2.neur = ...
    GUI.autogen.Bullets(...
        GUI.options.tab2.neur.opts, ...
        GUI.handles.tab2.neur.panel, ...
        [5 310 170 20], ...
        GUI.handles.tab2.neur);

% check box
GUI.options.tab2.neur.plots = {...
    {'P(event)','neur_probplot'},...
    {'ISI Hist.','neur_isihist'},...
    {'Spike Raster Plot','neur_rasterplot'}};
GUI.handles.tab2.neur = ...
    GUI.autogen.Checkbox(...
        GUI.options.tab2.neur.plots, ...
        GUI.handles.tab2.neur.panel, ...
        checkboxSize, ...
        GUI.handles.tab2.neur);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% tab2 - define RCF subpanel and content
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
GUI.handles.tab2.neur.rcf.panel = uipanel(...
    'Parent',GUI.handles.tab2.neur.panel,...
    'Title','Rectify, Compress, Filter (RCF) Model Parameters',...
    'Units','pixels',...
    'Position',neurPanelSize,...
    'BorderType','line',...
    'Visible','on');

% text & dropdown
GUI.options.tab2.neur.rcf.parm = {...
    {'Rectification','neur_rcf_rect',{'Half Wave','Full Wave','None / Bypass'}},...
    {'Compression','neur_rcf_comp',{'Logarithmic','None / Bypass'}},...
    {'Filtering','neur_rcf_filt',{'Butterworth LPF','None / Bypass'}},...
    {'Spike Gen.','neur_rcf_spike',{'Fixed Threshold','Variable Threshold','Peak Detector Neurons','None / Bypass'}}};
GUI.handles.tab2.neur.rcf = ...
    GUI.autogen.Dropdown(...
        GUI.options.tab2.neur.rcf.parm, ...
        GUI.handles.tab2.neur.rcf.panel, ...
        [195 250 160 20], ...
        GUI.handles.tab2.neur.rcf);

% text & input block
GUI.options.tab2.neur.rcf.filt = {...
    {'Filter Order','neur_rcf_ord',1},...
    {'Fitter Cutoff (Hz)','neur_rcf_fc',8000}};
GUI.handles.tab2.neur.rcf = ...
    GUI.autogen.Textedit(...
        GUI.options.tab2.neur.rcf.filt, ...
        GUI.handles.tab2.neur.rcf.panel, ...
        [200 155 80 20], ...
        GUI.handles.tab2.neur.rcf);

% text & input block
GUI.options.tab2.neur.rcf.rper = {...
    {'Spiking Threshold Level','neur_rcf_thrlev',0},...
    {'Abs. Refractory Period (ms)','neur_rcf_refaper',0},...
    {'Rel. Refractory Period (ms)','neur_rcf_refrper',0}};
GUI.handles.tab2.neur.rcf = ...
    GUI.autogen.Textedit(...
        GUI.options.tab2.neur.rcf.rper, ...
        GUI.handles.tab2.neur.rcf.panel, ...
        [200 100 100 20], ...
        GUI.handles.tab2.neur.rcf);

% text & dropdown
GUI.options.tab2.neur.rcf.rfun = {...
    {'Rel. Refractory Function','neur_rcf_reffcn',{'Constant','Linear','Exponential'}}};
GUI.handles.tab2.neur.rcf = ...
    GUI.autogen.Dropdown(...
        GUI.options.tab2.neur.rcf.rfun, ...
        GUI.handles.tab2.neur.rcf.panel, ...
        [195 40 130 20], ...
        GUI.handles.tab2.neur.rcf);

% check box
GUI.options.tab2.neur.rcf.plots = {...
    {'Frequency Response','neur_rcf_freqresp'}};
GUI.handles.tab2.neur.rcf = ...
    GUI.autogen.Checkbox(...
        GUI.options.tab2.neur.rcf.plots, ...
        GUI.handles.tab2.neur.rcf.panel, ...
        checkboxSize, ...
        GUI.handles.tab2.neur.rcf);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% tab2 - define Bio subpanel and content
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
GUI.handles.tab2.neur.bio.panel = uipanel(...
    'Parent',GUI.handles.tab2.neur.panel,...
    'Title','Biophysical Model Parameters',...
    'Units','pixels',...
    'Position',neurPanelSize,...
    'BorderType','line',...
    'Visible','off');

% text & table
GUI.options.tab2.neur.bio.ihc = {'Meddis Inner Hair Cell Model Parameters','neur_biol_parm',...
    {'Fanout','A','B','g','y','l','r','x'},...
    {'HSR',[6 20 2500 4000 10.05 1500 6580 66.31]},...
    {'MSR',[2 5 300 2000 11.11 1250 16667 250]},...
    {'LSR',[2 2 200 500 1.05 3500 6580 66.31]}};
GUI.handles.tab2.neur.bio = ...
    GUI.autogen.Table(...
        GUI.options.tab2.neur.bio.ihc, ...
        GUI.handles.tab2.neur.bio.panel, ...
        [10 40 400 80], ...
        GUI.handles.tab2.neur.bio);

% text & input blocks
GUI.options.tab2.neur.bio.ref = {...
    {'Abs. Per. (msec)','neur_biol_absper',0.75}
    {'Rel. Per. (msec)','neur_biol_relper',0.8}
    {'C_rel','neur_biol_cr',0.55}};
GUI.handles.tab2.neur.bio = ...
    GUI.autogen.Textedit(...
        GUI.options.tab2.neur.bio.ref, ...
        GUI.handles.tab2.neur.bio.panel, ...
        [200 250 80 20], ...
        GUI.handles.tab2.neur.bio);

% check box
GUI.options.tab2.neur.bio.plots = {...
    {'Plot Internal States','neur_biol_plotstates'}};
GUI.handles.tab2.neur.bio = ...
    GUI.autogen.Checkbox(...
        GUI.options.tab2.neur.bio.plots, ...
        GUI.handles.tab2.neur.bio.panel, ...
        checkboxSize, ...
        GUI.handles.tab2.neur.bio);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% tab2 - define Random subpanel and content
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
GUI.handles.tab2.neur.rnd.panel = uipanel(...
    'Parent',GUI.handles.tab2.neur.panel,...
    'Title','Random Spiking Process Parameters',...
    'Units','pixels',...
    'Position',neurPanelSize,...
    'BorderType','line',...
    'Visible','off');

% text and dropdown
GUI.options.tab2.neur.rnd.mode = {...
    {'Firing Rate Mode','neur_rand_mode',{'Constant','Sinusoidal','None / Bypass'}}};
GUI.handles.tab2.neur.rnd = ...
    GUI.autogen.Dropdown(...
        GUI.options.tab2.neur.rnd.mode, ...
        GUI.handles.tab2.neur.rnd.panel, ...
        [195 250 130 20], ...
        GUI.handles.tab2.neur.rnd);

% text & input blocks
GUI.options.tab2.neur.rnd.parm = {...
    {'Maximum Firing Rate (Hz)','neur_rand_rate',100},...
    {'Sinusoidal Modulation (Hz)','neur_rand_amod',200},...
    {'Refractory Period (msec)','neur_rand_rper',0},...
    {'Auditory Nerve Fanout','neur_rand_fanout',1}};
GUI.handles.tab2.neur.rnd = ...
    GUI.autogen.Textedit(...
        GUI.options.tab2.neur.rnd.parm, ...
        GUI.handles.tab2.neur.rnd.panel, ...
        [200 200 80 20], ...
        GUI.handles.tab2.neur.rnd);

% text & input block
GUI.options.tab2.neur.rnd.seed = {...
    {'Random Number Seed','neur_rand_seed',0}};
GUI.handles.tab2.neur.rnd = ...
    GUI.autogen.Textedit(...
        GUI.options.tab2.neur.rnd.seed, ...
        GUI.handles.tab2.neur.rnd.panel, ...
        [200 100 100 20], ...
        GUI.handles.tab2.neur.rnd);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% TAB3 - COCHLEAR NUCLEUS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

GUI.handles.tab3.cn.panel = uipanel(...
    'Parent',GUI.handles.tab3.panel,...
    'Title','Cochlear Nucleus',...
    'Units','pixels',...
    'Position',[10 400 panelSize(3)-20 300],...
    'BorderType','beveledout');

% text & input blocks
GUI.options.tab3.cn.arch = {'Network Architecture',...
    {'Total Neurons','cn_ntot',4},...
    {'# Synapses / Cell','cn_nsyn',60}};
GUI.handles.tab3.cn = ...
    GUI.autogen.Textedit(...
        GUI.options.tab3.cn.arch, ...
        GUI.handles.tab3.cn.panel, ...
        [200 260 80 20], ...
        GUI.handles.tab3.cn);

% text & input blocks
GUI.options.tab3.cn.rec = {'Recurrent Connections',...
    {'N Nearest Neighbors','cn_nrec',4},...
    {'Synaptic Strength','cn_wrec',1}};
GUI.handles.tab3.cn = ...
    GUI.autogen.Textedit(...
        GUI.options.tab3.cn.rec, ...
        GUI.handles.tab3.cn.panel, ...
        [200 200 80 20], ...
        GUI.handles.tab3.cn);

% text & table
GUI.options.tab3.cn.lif = {'Leaky Integrate-and-Fire Model Parameters','cn_lifparams'...
    {'Vth','Vrest','Vreset','tau_m','tau_ex','tau_in','tau_re','g_exDel','g_inDel','g_reDel'},...
    {'',[-54 -70 -80 10 5 5 5 15 5 5]}};
GUI.handles.tab3.cn = ...
    GUI.autogen.Table(...
        GUI.options.tab3.cn.lif, ...
        GUI.handles.tab3.cn.panel, ...
        [5 30 600 40], ...
        GUI.handles.tab3.cn);

% check box
GUI.options.tab3.cn.plots = {...
    {'Plot Transcond.','cn_plottran'},...
    {'Auto-Corr.','cn_autocorr'},...
    {'Membrane Pot.','cn_plotvmem'},...
    {'ISI Hist.','cn_isihist'},...
    {'Spike Raster Plot','cn_rasterplot'}};
GUI.handles.tab3.cn = ...
    GUI.autogen.Checkbox(...
        GUI.options.tab3.cn.plots, ...
        GUI.handles.tab3.cn.panel, ...
        checkboxSize, ...
        GUI.handles.tab3.cn);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% post-init configuration

% load config.mat, if available
try
    load(fullfile('.','config.mat'),'cfg');
    GUI.callbacks.help.set_config(GUI.handles, cfg);
end

% force selected subpanels to be visible
%TBD

% return figure handle, if required
if nargout
    varargout{1} = GUI.handles.main.figure;
end

% (re)save data and handles to GUI figure before returning
guidata(GUI.handles.main.figure, GUI)
